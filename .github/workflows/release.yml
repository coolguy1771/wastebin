name: Release

on:
    push:
        tags:
            - v*.*.*

jobs:
    # Docker container release job
    container-release:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci-skip]')"
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Prepare Version
              id: prep
              run: echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: all

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  install: true
                  version: latest
                  driver-opts: image=moby/buildkit:latest

            - name: Login to GitHub Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and Push Docker Image
              if: github.event_name != 'pull_request'
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/wastebin:latest
                      ghcr.io/${{ github.repository_owner }}/wastebin:${{ steps.prep.outputs.version }}

    # Go binary release job using GoReleaser
    go-release:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci-skip]')"
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up Go Environment
              uses: actions/setup-go@v5
              with:
                  go-version: 1.22

            - name: Cache Go Modules
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Run GoReleaser
              uses: goreleaser/goreleaser-action@v6
              with:
                  version: latest
                  args: release --clean
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
